source1:
  type: RosKinect
  module: 'object_recognition_ros.io'
  #
  # Example parameters to set (the default settings are using the ros topics starting with /camera/....) 
  #  
  parameters:
    #rgb_frame_id: camera_rgb_optical_frame
    #rgb_image_topic: camera_rgb_image_rect_color
    #rgb_camera_info: camera_rgb_camera_info
    #depth_image_topic: camera_depth_registered_image_rect
    #depth_camera_info: camera_depth_registered_camera_info
    
    #crop_enabled: True
#    x_min: -0.4
#    x_max: 0.4
#    y_min: -1.0
#    y_max: 0.2
#    z_min: 0.3
#    z_max: 1.5
    # or again for the camera:
    rgb_frame_id: kinect2
    rgb_image_topic: /kinect2/hd/image_color
    rgb_camera_info: /kinect2/hd/camera_info
    depth_image_topic: /kinect2/hd/image_depth_rect
    depth_camera_info: /kinect2/hd/camera_info

sink1:
  type: TablePublisher
  module: 'object_recognition_tabletop'
  inputs: [source1]

sink2:
  type: Publisher
  module: 'object_recognition_ros.io'
  inputs: [source1]
  parameters:
    do_visualize: True
    latched: True
    #  The ROS topic to use for the marker array.
    markers_topic: markers
    #  The ROS topic to use for the object meta info string
    object_ids_topic: object_ids
    #  The ROS topic to use for the pose array.
    pose_topic: object_poses
    #  Sets whether the point cloud clusters have to be published or not
    publish_clusters: True
    #  The ROS topic to use for the recognized object
    recognized_object_array_topic: recognized_object_array


pipeline1:
  type: TabletopTableDetector
  module: 'object_recognition_tabletop'
  inputs: [source1]
  outputs: [sink1]
  parameters:
    table_detector:
        min_table_size: 10000
        plane_threshold: 0.10
    clusterer:
        table_z_filter_max: 1.0
        table_z_filter_min: 0.30

pipeline2:
  type: TabletopObjectDetector
  module: 'object_recognition_tabletop'
  inputs: [pipeline1, source1]
  outputs: [sink2]
  parameters:
    object_ids: 'all'
    db:
      type: CouchDB
      root: http://localhost:5984
      collection: object_recognition
